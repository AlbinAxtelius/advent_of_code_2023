defmodule AdventOfCode.Solutions.Day5.Part2.Streams do
  @moduledoc """
  Don't run this, it takes a really long time
  """

  @seeds [
    [432_563_865, 39_236_501],
    [1_476_854_973, 326_201_032],
    [1_004_521_373, 221_995_697],
    [2_457_503_679, 46_909_145],
    [603_710_475, 11_439_698],
    [1_242_281_714, 12_935_671],
    [2_569_215_463, 456_738_587],
    [3_859_706_369, 129_955_069],
    [3_210_146_725, 618_372_750],
    [601_583_464, 1_413_192]
  ]

  @maps %{
    "fertilizer-to-water" => [
      {434_502_471, 905_085_783, 0},
      {1_919_893_972, 1_968_768_877, 1_739_362_496},
      {1_968_768_878, 1_984_917_463, 2_735_409_723},
      {1_858_151_799, 1_919_893_971, 3_324_522_082},
      {1_984_917_464, 2_010_419_824, 4_137_416_965},
      {2_971_682_591, 3_158_507_013, 470_583_313},
      {2_532_295_557, 2_644_076_869, 2_751_558_309},
      {1_340_674_299, 1_776_448_143, 3_664_705_516},
      {3_898_529_330, 3_979_195_349, 1_851_374_390},
      {2_010_419_825, 2_218_026_008, 857_422_234},
      {2_418_040_507, 2_481_177_494, 1_788_237_402},
      {0, 434_502_470, 1_065_028_418},
      {2_481_177_495, 2_485_756_142, 1_499_530_889},
      {2_916_167_530, 2_971_682_590, 4_162_919_326},
      {3_158_507_014, 3_227_731_410, 1_670_138_099},
      {905_085_784, 1_183_527_044, 3_386_264_255},
      {3_979_195_350, 4_218_434_386, 2_496_170_686},
      {2_879_229_926, 2_916_167_529, 4_100_479_361},
      {3_227_731_411, 3_393_759_972, 1_504_109_537},
      {2_218_026_009, 2_418_040_506, 657_407_736},
      {3_393_759_973, 3_651_255_764, 2_909_879_036},
      {2_644_076_870, 2_879_229_925, 1_932_040_410},
      {3_651_255_765, 3_898_529_329, 2_167_193_466},
      {2_485_756_143, 2_532_295_556, 2_863_339_622},
      {1_183_527_045, 1_340_674_298, 3_167_374_828},
      {1_776_448_144, 1_858_151_798, 2_414_467_031}
    ],
    "humidity-to-location" => [
      {530_461_632, 625_635_593, 596_652_260},
      {1_731_990_943, 1_890_108_027, 3_845_096_173},
      {1_890_108_028, 2_283_877_659, 2_243_878_974},
      {625_635_594, 689_286_968, 0},
      {753_532_949, 909_217_269, 1_920_725_725},
      {329_652_856, 530_461_631, 63_651_375},
      {0, 60_175_489, 264_460_151},
      {2_283_877_660, 2_630_298_532, 1_381_444_473},
      {3_594_530_530, 3_642_225_077, 4_003_213_258},
      {60_175_490, 106_251_675, 548_036_821},
      {1_678_246_429, 1_731_990_942, 4_100_105_147},
      {3_642_225_078, 3_934_637_988, 2_637_648_606},
      {106_251_676, 329_652_855, 324_635_641},
      {3_545_333_189, 3_594_530_529, 4_050_907_806},
      {909_217_270, 1_050_334_904, 4_153_849_661},
      {3_477_799_963, 3_545_333_188, 3_455_132_509},
      {689_286_969, 691_826_221, 594_113_007},
      {2_630_298_533, 3_155_369_524, 2_930_061_517},
      {1_050_334_905, 1_678_246_428, 753_532_949},
      {3_155_369_525, 3_477_799_962, 3_522_665_735},
      {3_934_637_989, 4_102_106_916, 2_076_410_046},
      {4_102_106_917, 4_294_967_295, 1_727_865_346}
    ],
    "light-to-temperature" => [
      {864_157_287, 1_699_105_003, 1_726_863_959},
      {190_436_173, 244_056_570, 263_199_301},
      {1_699_105_004, 2_032_551_703, 1_393_417_259},
      {244_056_571, 400_017_762, 2_783_912_856},
      {400_017_763, 699_963_219, 2_939_874_048},
      {2_517_852_185, 3_239_819_504, 671_449_939},
      {2_295_751_005, 2_517_852_184, 2_561_811_676},
      {2_032_551_704, 2_295_751_004, 0},
      {0, 190_436_172, 481_013_766},
      {699_963_220, 864_157_286, 316_819_699}
    ],
    "seed-to-soil" => [
      {2_969_131_334, 3_867_742_477, 2_824_905_526},
      {322_319_732, 332_096_008, 0},
      {692_683_038, 833_083_454, 379_216_444},
      {1_559_827_635, 1_569_321_570, 3_723_516_670},
      {332_096_009, 544_060_917, 637_824_014},
      {1_569_321_571, 1_605_145_584, 929_691_047},
      {1_605_145_585, 2_886_408_767, 965_515_061},
      {833_083_455, 849_788_922, 621_118_546},
      {0, 322_319_731, 9_776_277},
      {544_060_918, 591_181_352, 332_096_009},
      {1_319_171_816, 1_453_903_687, 3_733_010_606},
      {1_453_903_688, 1_526_291_749, 2_329_500_810},
      {1_526_291_750, 1_559_827_634, 2_401_888_872},
      {2_886_408_768, 2_969_131_333, 2_246_778_244},
      {929_691_047, 1_319_171_815, 2_435_424_757},
      {591_181_353, 692_683_037, 519_616_861}
    ],
    "soil-to-fertilizer" => [
      {2_690_204_780, 2_942_762_622, 2_819_195_624},
      {1_339_121_422, 1_349_668_378, 1_098_298_904},
      {852_292_683, 949_475_739, 499_510_245},
      {2_372_810_194, 2_442_609_545, 4_225_167_944},
      {1_808_006_977, 1_864_232_514, 887_408_376},
      {4_058_417_302, 4_063_049_792, 3_071_753_467},
      {3_452_467_754, 3_815_913_701, 2_455_749_676},
      {3_846_646_964, 4_058_417_301, 2_243_979_338},
      {4_063_049_793, 4_294_967_295, 3_076_385_958},
      {2_269_547_568, 2_372_810_193, 3_860_856_553},
      {21_067_281, 61_048_149, 943_633_914},
      {1_584_043_708, 1_808_006_976, 1_388_096_097},
      {2_442_609_546, 2_690_204_779, 3_493_291_351},
      {949_475_740, 990_679_241, 1_801_722_612},
      {678_191_385, 780_218_229, 264_653_767},
      {2_942_762_623, 3_031_999_328, 3_740_886_585},
      {310_132_079, 545_361_751, 1_152_866_424},
      {3_815_913_702, 3_846_646_963, 3_830_123_291},
      {1_568_473_870, 1_584_043_707, 249_083_929},
      {1_506_703_078, 1_568_473_869, 1_612_059_366},
      {545_361_752, 678_191_384, 366_680_612},
      {1_992_124_969, 2_036_145_531, 1_108_845_861},
      {1_048_406_348, 1_339_121_421, 596_693_302},
      {2_243_979_338, 2_269_547_567, 3_467_723_121},
      {1_349_668_379, 1_506_703_077, 1_879_110_833},
      {0, 21_067_280, 1_858_043_552},
      {3_293_048_094, 3_452_467_753, 3_308_303_461},
      {3_031_999_329, 3_293_048_093, 3_964_119_179},
      {780_218_230, 852_292_682, 983_614_783},
      {1_005_796_680, 1_048_406_347, 1_055_689_236},
      {1_864_232_515, 1_992_124_968, 1_673_830_158},
      {990_679_242, 1_005_796_679, 1_842_926_114},
      {61_048_150, 310_132_078, 0}
    ],
    "temperature-to-humidity" => [
      {3_766_826_980, 3_775_568_109, 603_287_260},
      {3_684_982_838, 3_715_662_566, 572_607_531},
      {1_101_548_002, 1_201_631_931, 2_084_038_135},
      {3_228_345_771, 3_284_624_336, 655_933_651},
      {553_997_241, 722_329_824, 1_881_393_627},
      {2_882_185_871, 2_900_796_160, 553_997_241},
      {1_072_799_097, 1_101_548_001, 627_184_746},
      {3_397_056_204, 3_412_212_559, 612_028_390},
      {1_430_646_491, 1_618_551_087, 1_693_489_030},
      {1_734_352_525, 1_736_376_003, 3_039_118_107},
      {0, 43_042_719, 220_345_266},
      {3_775_568_110, 3_923_349_768, 840_454_312},
      {3_715_662_567, 3_766_826_979, 2_184_122_065},
      {171_240_045, 173_662_937, 317_040_325},
      {4_158_663_426, 4_294_967_295, 3_245_373_536},
      {385_599_932, 460_171_448, 145_773_749},
      {43_042_720, 171_240_044, 0},
      {4_094_893_831, 4_158_663_425, 1_490_020_808},
      {173_662_938, 314_371_168, 319_463_218},
      {1_821_839_294, 1_950_081_388, 712_212_217},
      {314_371_169, 331_947_592, 128_197_325},
      {3_923_349_769, 4_094_893_830, 2_474_405_575},
      {3_105_028_111, 3_226_543_246, 2_352_890_439},
      {3_318_936_261, 3_397_056_203, 3_467_140_696},
      {3_226_543_247, 3_228_345_770, 2_235_286_478},
      {722_329_825, 933_100_469, 4_084_196_651},
      {933_100_470, 1_072_799_096, 1_553_790_403},
      {1_201_631_932, 1_430_646_490, 1_261_006_249},
      {331_947_593, 385_599_931, 263_387_986},
      {2_900_796_161, 3_009_135_358, 3_137_034_338},
      {3_412_212_560, 3_684_982_837, 988_235_971},
      {1_618_551_088, 1_734_352_524, 2_237_089_002},
      {1_736_376_004, 1_821_839_293, 3_381_677_406},
      {1_950_081_389, 2_489_017_400, 3_545_260_639},
      {3_284_624_337, 3_318_936_260, 2_049_726_211},
      {2_489_017_401, 2_882_185_870, 2_645_949_637},
      {3_009_135_359, 3_105_028_110, 3_041_141_586}
    ],
    "water-to-light" => [
      {593_866_955, 600_118_994, 894_548_549},
      {327_816_880, 339_484_971, 3_168_871_398},
      {2_935_057_349, 2_951_315_718, 3_549_766_643},
      {1_304_104_659, 1_410_457_793, 1_070_236_274},
      {723_222_576, 759_103_798, 900_800_589},
      {2_744_985_745, 2_827_663_438, 2_175_309_976},
      {3_819_543_751, 3_856_463_151, 3_969_615_926},
      {4_015_453_657, 4_224_260_136, 4_086_160_816},
      {360_262_147, 593_866_954, 0},
      {1_514_177_176, 1_602_133_747, 3_566_025_013},
      {1_874_477_761, 1_919_053_685, 3_440_195_928},
      {948_479_332, 1_061_783_498, 1_851_853_101},
      {3_389_635_913, 3_588_986_794, 2_969_520_516},
      {1_061_783_499, 1_199_169_735, 1_504_406_289},
      {1_630_426_233, 1_874_477_760, 623_007_058},
      {620_555_911, 723_222_575, 1_749_186_436},
      {339_484_972, 360_262_146, 2_154_532_801},
      {759_103_799, 948_479_331, 1_965_157_268},
      {3_758_595_179, 3_819_543_750, 4_007_153_882},
      {2_951_315_719, 3_182_679_671, 3_180_539_490},
      {1_471_149_229, 1_514_177_175, 233_604_808},
      {1_919_053_686, 2_033_965_059, 276_632_755},
      {0, 327_816_879, 1_176_589_409},
      {1_410_457_794, 1_437_947_756, 867_058_586},
      {1_199_169_736, 1_203_751_668, 391_544_129},
      {600_118_995, 620_043_749, 603_082_303},
      {4_276_290_379, 4_294_348_740, 4_068_102_454},
      {3_856_463_152, 4_015_453_656, 3_810_625_421},
      {620_043_750, 620_555_910, 2_969_008_355},
      {4_224_260_137, 4_276_290_378, 3_758_595_179},
      {3_182_679_672, 3_389_635_912, 396_126_062},
      {4_294_348_741, 4_294_967_295, 4_006_535_327},
      {3_588_986_795, 3_653_981_584, 3_484_771_853},
      {2_033_965_060, 2_744_985_744, 2_257_987_670},
      {2_827_663_439, 2_935_057_348, 1_641_792_526},
      {1_602_133_748, 1_630_426_232, 3_411_903_443},
      {1_437_947_757, 1_471_149_228, 1_037_034_802},
      {1_203_751_669, 1_304_104_658, 936_681_812}
    ]
  }

  def single({min, max, start}, source) do
    if min <= source and max >= source do
      source - min + start
    else
      nil
    end
  end

  @spec source_to_destination(integer(), [{integer(), integer(), integer()}]) :: integer()
  def source_to_destination(source, maps) do
    Enum.find_value(
      maps,
      source,
      fn {min, max, start} ->
        if min <= source and max >= source do
          source - min + start
        else
          nil
        end
      end
    )
  end

  def seed_to_location(seed) do
    %{
      "seed-to-soil" => seed_to_soil,
      "soil-to-fertilizer" => soil_to_fertilizer,
      "fertilizer-to-water" => fertilizer_to_water,
      "water-to-light" => water_to_light,
      "light-to-temperature" => light_to_temperature,
      "temperature-to-humidity" => temperature_to_humidity,
      "humidity-to-location" => humidity_to_location
    } = @maps

    seed
    |> source_to_destination(seed_to_soil)
    |> source_to_destination(soil_to_fertilizer)
    |> source_to_destination(fertilizer_to_water)
    |> source_to_destination(water_to_light)
    |> source_to_destination(light_to_temperature)
    |> source_to_destination(temperature_to_humidity)
    |> source_to_destination(humidity_to_location)
  end

  def run() do
    rec(@seeds)
  end

  def rec(seeds, min \\ :infinity)
  def rec([[_, 0] | []], m), do: m

  def rec([[_, 0] | rest], m) do
    IO.puts("step")
    rec(rest, m)
  end

  def rec([[value, left] | rest], m),
    do: rec([[value + 1, left - 1] | rest], min(m, seed_to_location(value)))
end
